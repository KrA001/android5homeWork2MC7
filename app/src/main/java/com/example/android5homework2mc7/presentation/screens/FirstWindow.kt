
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.text.BasicTextField
import androidx.compose.material3.Icon
import androidx.compose.material3.Text
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.android5homework2mc7.R

@Composable
fun MainScreen() {
    var showDetailScreen by remember { mutableStateOf(false) } // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    var selectedPlace by remember { mutableStateOf<PlaceDetails?>(null) } // –í—ã–±—Ä–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–µ—Ç–∞–ª–µ–π

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
    if (showDetailScreen && selectedPlace != null) {
        DetailScreen(
            title = selectedPlace!!.title,
            location = selectedPlace!!.location,
            imageResId = selectedPlace!!.imageResId,
            onBackClick = { showDetailScreen = false; selectedPlace = null } // –ó–∞–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
        )
    } else {
        // –û—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Ä–∞–Ω
        Column(
            modifier = Modifier
                .fillMaxSize()
                .background(Color.White) // –ë–µ–ª—ã–π —Ñ–æ–Ω
                .padding(24.dp) // –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã
        ) {
            Header() // –ó–∞–≥–æ–ª–æ–≤–æ–∫
            SearchBar() // –ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞
            PopularPlacesSection { title, location, imageResId ->
                selectedPlace = PlaceDetails(title, location, imageResId) // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–∞
                showDetailScreen = true // –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
            }
            Spacer(modifier = Modifier.weight(1f)) // –ó–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—å –¥–ª—è —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
            BottomNavigationBar() // –ù–∏–∂–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
        }
    }
}

@Composable
fun Header() {
    Row(
        modifier = Modifier.fillMaxWidth().padding(top = 24.dp), // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –æ—Ç—Å—Ç—É–ø–æ–º —Å–≤–µ—Ä—Ö—É
        verticalAlignment = Alignment.CenterVertically,
        horizontalArrangement = Arrangement.SpaceBetween
    ) {
        Column {
            Text("Hi, David üëã", fontSize = 28.sp, fontWeight = FontWeight.Bold, color = Color.Black) // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
            Text("Explore the world", fontSize = 16.sp, color = Color.Gray) // –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        }
        // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        Image(
            painter = painterResource(id = R.drawable.profile_image),
            contentDescription = null,
            modifier = Modifier.size(45.dp).clip(CircleShape).background(Color.LightGray) // –ö—Ä—É–≥–ª–∞—è —Ñ–æ—Ä–º–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        )
    }
}

@Composable
fun SearchBar() {
    var searchQuery by remember { mutableStateOf("") } // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞

    // –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    Box(
        modifier = Modifier.fillMaxWidth()
            .padding(vertical = 24.dp)
            .background(Color.LightGray, RoundedCornerShape(12.dp)), // –ó–∞–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤
        contentAlignment = Alignment.CenterStart
    ) {
        BasicTextField(
            value = searchQuery,
            onValueChange = { searchQuery = it }, // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞
            modifier = Modifier.fillMaxWidth().padding(18.dp), // –û—Ç—Å—Ç—É–ø—ã –≤–Ω—É—Ç—Ä–∏ –ø–æ–ª—è
            decorationBox = { innerTextField ->
                if (searchQuery.isEmpty()) Text("Search places", color = Color.Gray) // –ü–æ–¥—Å–∫–∞–∑–∫–∞, –µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ
                innerTextField()
            }
        )
        // –ò–∫–æ–Ω–∫–∞ –ø–æ–∏—Å–∫–∞
        Icon(
            painter = painterResource(id = R.drawable.ic_search),
            contentDescription = null,
            modifier = Modifier.align(Alignment.CenterEnd).padding(end = 16.dp),
            tint = Color.Black // –¶–≤–µ—Ç –∏–∫–æ–Ω–∫–∏
        )
    }
}

@Composable
fun PopularPlacesSection(onPlaceCardClick: (String, String, Int) -> Unit) {
    Column {
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–µ—Å—Ç
        Row(modifier = Modifier.fillMaxWidth(), horizontalArrangement = Arrangement.SpaceBetween) {
            Text("Popular places", fontSize = 18.sp, fontWeight = FontWeight.Bold, color = Color.Black)
            Text("View all", color = Color.Gray) // –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –º–µ—Å—Ç
        }
        Spacer(modifier = Modifier.height(24.dp))

        // –í–∫–ª–∞–¥–∫–∏ "Most Viewed", "Nearby", "Latest"
        Row(modifier = Modifier.fillMaxWidth(), horizontalArrangement = Arrangement.SpaceAround) {
            listOf("Most Viewed", "Nearby", "Latest").forEach { text ->
                Box(
                    modifier = Modifier
                        .clip(RoundedCornerShape(50)) // –ó–∞–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤ –≤–∫–ª–∞–¥–æ–∫
                        .background(if (text == "Most Viewed") Color.Black else Color.LightGray)
                        .padding(horizontal = 24.dp, vertical = 8.dp) // –û—Ç—Å—Ç—É–ø—ã –≤–Ω—É—Ç—Ä–∏ –≤–∫–ª–∞–¥–æ–∫
                ) {
                    Text(text, color = if (text == "Most Viewed") Color.White else Color.Gray) // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∫–ª–∞–¥–∫–∏
                }
            }
        }

        Spacer(modifier = Modifier.height(24.dp))

        // –ö–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–µ—Å—Ç
        Row(modifier = Modifier.fillMaxWidth()) {
            PlaceCard("Mount Fuji, Tokyo", "Tokyo, Japan", R.drawable.mount_fuji, "4.8") {
                onPlaceCardClick("Mount Fuji, Tokyo", "Tokyo, Japan", R.drawable.mount_fuji)
            }
            Spacer(modifier = Modifier.width(16.dp))
            PlaceCard("Andes, South America", "South, America", R.drawable.andes, "4.7") {
                onPlaceCardClick("Andes, South America", "South, America", R.drawable.andes)
            }
        }
    }
}

@Composable
fun PlaceCard(title: String, location: String, imageRes: Int, rating: String, onClick: () -> Unit) {
    // –ö–∞—Ä—Ç–æ—á–∫–∞ –º–µ—Å—Ç–∞
    Column(
        modifier = Modifier.width(170.dp).clickable(onClick = onClick) // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É
    ) {
        // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ—Å—Ç–∞
        Image(
            painter = painterResource(id = imageRes),
            contentDescription = null,
            modifier = Modifier.height(220.dp).fillMaxWidth().clip(RoundedCornerShape(20.dp)),
            contentScale = ContentScale.Crop // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        )
        Text(title, fontWeight = FontWeight.Bold, color = Color.Black, modifier = Modifier.padding(top = 8.dp)) // –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞
        Text(location, color = Color.Gray) // –õ–æ–∫–∞—Ü–∏—è –º–µ—Å—Ç–∞
        Text("‚≠ê $rating", color = Color.Gray, fontSize = 12.sp) // –†–µ–π—Ç–∏–Ω–≥ –º–µ—Å—Ç–∞
    }
}

@Composable
fun BottomNavigationBar() {
    // –ù–∏–∂–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
    Row(modifier = Modifier.fillMaxWidth().padding(bottom = 24.dp), horizontalArrangement = Arrangement.SpaceAround) {
        // –ò–∫–æ–Ω–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        listOf(R.drawable.ic_home, R.drawable.ic_clock, R.drawable.ic_heart, R.drawable.ic_profile).forEach { icon ->
            Icon(painter = painterResource(id = icon), contentDescription = null, modifier = Modifier.size(24.dp)) // –†–∞–∑–º–µ—Ä –∏–∫–æ–Ω–æ–∫
        }
    }
}

@Composable
fun DetailScreen(title: String, location: String, imageResId: Int, onBackClick: () -> Unit) {
    // –≠–∫—Ä–∞–Ω —Å –¥–µ—Ç–∞–ª—è–º–∏ –æ –º–µ—Å—Ç–µ
    Column(
        modifier = Modifier.fillMaxSize().padding(24.dp),
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.Center
    ) {
        // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ—Å—Ç–∞ –Ω–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
        Image(
            painter = painterResource(id = imageResId),
            contentDescription = null,
            modifier = Modifier.height(240.dp).fillMaxWidth().clip(RoundedCornerShape(20.dp)),
            contentScale = ContentScale.Crop
        )
        Spacer(modifier = Modifier.height(24.dp))
        Text(text = title, fontSize = 24.sp, fontWeight = FontWeight.Bold, color = Color.Black) // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        Spacer(modifier = Modifier.height(8.dp))
        Text(text = location, fontSize = 18.sp, color = Color.Gray) // –õ–æ–∫–∞—Ü–∏—è
        Spacer(modifier = Modifier.height(24.dp))
        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        Text(text = "Back", modifier = Modifier.clickable(onClick = onBackClick).padding(16.dp))
    }
}

// –î–∞–Ω–Ω—ã–µ –æ –º–µ—Å—Ç–µ
data class PlaceDetails(val title: String, val location: String, val imageResId: Int)

@Preview
@Composable
fun FirstScreen() {
    MainScreen() // –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
}
